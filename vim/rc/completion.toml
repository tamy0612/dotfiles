[[plugins]]
repo = 'Shougo/ddc.vim'
on_event = ['InsertEnter']
hook_source = '''
  source $VIMDIR/rc/ddc.vim
  call ddc#enable()
'''

[[plugins]]
repo = 'Shougo/pum.vim'
on_source = ['ddc-ui-pum']

[[plugins]]
repo = 'Shougo/ddc-ui-pum'
on_source = ['ddc.vim']

[[plugins]]
repo = 'tani/ddc-fuzzy'
on_source = ['ddc.vim']

[[plugins]]
repo = 'Shougo/ddc-filter-matcher_head'
on_source = ['ddc.vim']

[[plugins]]
repo = 'Shougo/ddc-converter_remove_overlap'
on_source = ['ddc.vim']

[[plugins]]
repo = 'Shougo/ddc-source-around'
on_source = ['ddc.vim']

[[plugins]]
repo = 'shun/ddc-source-vim-lsp'
on_source = ['ddc.vim']

[[plugins]]
repo = 'matsui54/denops-popup-preview.vim'
on_source = ['vim-lsp', 'ddc.vim']
depends = ['denops.vim']
hook_source = '''
  call popup_preview#enable()
'''

[[plugins]]
repo = 'matsui54/denops-signature_help'
on_source = ['vim-lsp', 'ddc.vim']
depends = ['denops.vim']
hook_add = '''
  let g:signature_help_config = #{
        \ contentsStyle: "labels",
        \ viewStyle: "floating"
        \ }
'''
hook_source = '''
  call signature_help#enable()
'''

[[plugins]]
repo     = 'vim-skk/skkeleton'
if       = 'vimrc#denops#is_available() && filereadable(expand("$XDG_CACHE_HOME/skk/SKK-JISYO.L"))'
hook_add = '''
  if filereadable(expand("$XDG_CACHE_HOME/skk/SKK-JISYO.L"))
    call skkeleton#config({'globalJisyo': expand('$XDG_CACHE_HOME/skk/SKK-JISYO.L')})
  else
    call vimrc#error("SKK dictionary is not found.")
  endif
  inoremap <C-j> <Plug>(skkeleton-toggle)
  cnoremap <C-j> <Plug>(skkeleton-toggle)
'''
