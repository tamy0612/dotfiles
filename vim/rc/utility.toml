#================================================
# vim/rc/utility.toml
#
# Utility plugins
#================================================
[[plugins]]
repo        = 'tpope/vim-commentary'
on_cmd      = 'Commentary'
hook_add    = '''
  map <silent> <Leader>c :Commentary<CR>
'''

[[plugins]]
repo        = 'h1mesuke/vim-alignta'
on_cmd      = 'Align'

[[plugins]]
repo        = 'thinca/vim-template'
on_cmd      = 'TemplateLoad'
hook_add    = '''
  augroup MyInitialTemplates
    autocmd!
    autocmd BufNewFile *.h            execute 'TemplateLoad /init.h'
    autocmd BufNewFile *.hpp          execute 'TemplateLoad /init.hpp'
    autocmd BufNewFile *.d            execute 'TemplateLoad /init.d'
    autocmd BufNewFile *.java         execute 'TemplateLoad /init.java'
    autocmd BufNewFile build.sbt      execute 'TemplateLoad /init.sbt.scala'
    autocmd BufNewFile *.scala        execute 'TemplateLoad /init.scala'
    autocmd BufNewFile *.vim          execute 'TemplateLoad /init.vim'
    autocmd BufNewFile *.tikz         execute 'TemplateLoad /init.tikz'
    autocmd BufNewFile CMakeLists.txt execute 'TemplateLoad /init.cmake'
    autocmd BufNewFile *.toml         execute 'TemplateLoad /init.toml'
    autocmd BufNewFile *.py           execute 'TemplateLoad /init.py'
  augroup END
'''

[[plugins]]
repo        = 'ntpeters/vim-better-whitespace'
on_event    = 'InsertLeave'
hook_source = '''
  let g:strip_whitespace_on_save = 1
  let g:strip_whitelines_at_eof = 1
'''

[[plugins]]
repo        = 'AndrewRadev/switch.vim'
on_cmd      = 'Switch'
on_func     = 'switch#Switch'
hook_source = '''
  let g:switch_mapping = ""
'''

[[plugins]]
repo        = 'cohama/lexima.vim'
on_event    = 'InsertEnter'

[[plugins]]
repo        = 'sbdchd/neoformat'
on_cmd      = 'Neoformat'
hook_add    = '''
  let g:neoformat_basic_format_trim = 1
  let g:neoformat_only_msg_on_error = 1
  let g:neoformat_rules = get(g:, 'neoformat_rules', {})

  call plugins#neoformat#register_formatter()
'''

[[plugins]]
repo        = 'vim-scripts/autodate.vim'
on_event    = 'BufWritePre'
hook_source = '''
  let g:autodate_keyword_pre  = "Last Change:"
  let g:autodate_keyword_post = "."
  let g:autodate_format       = "%d %b. %Y"
'''

[[plugins]]
repo        = 'scrooloose/nerdtree'
on_cmd      = ['NERDTree', 'NERDTreeFind', 'NERDTreeToggle']
hook_add    = '''
  nmap <silent> <Leader>f :<C-u>NERDTreeToggle<CR>
'''
hook_source = '''
  let g:NERDTreeMinimalUI = 1
  let g:NERDTreeQuitOnOpen = 0
  let g:NERDTreeShowHidden = 1
'''
# vim:ft=toml:ts=2:sw=2:fdm=marker
