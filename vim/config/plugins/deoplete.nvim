" config
let g:deoplete#enable_at_startup            = 1
let g:deoplete#enable_ignore_case           = 1
let g:deoplete#enable_smart_case            = 1
let g:deoplete#auto_completion_start_length = 2
let g:deoplete#disable_auto_complete        = 1

" sources
if !exists('g:deoplete#sources')
  let g:deoplete#sources       = {}
endif
let g:deoplete#sources._       = ['buffer']
let g:deoplete#sources.c       = ['buffer', 'tag', 'omni', 'dictionary']
let g:deoplete#sources.cpp     = ['buffer', 'tag', 'omni', 'dictionary']
let g:deoplete#sources.ruby    = ['buffer', 'omni', 'dictionary']
let g:deoplete#sources.php     = ['buffer', 'omni', 'dictionary']
let g:deoplete#sources.python  = ['buffer', 'omni', 'dictionary']
let g:deoplete#sources.python3 = ['buffer', 'omni', 'dictionary']

" omni complete
if !exists('g:deoplete#omni#input_patterns')
  let g:deoplete#omni#input_patterns = {}
endif
let g:deoplete#omni#input_patterns.ruby = '[^.*\t]\.\w*\|\h\w*::'
let g:deoplete#omni#input_patterns.php  = '[^.\t]->\h\w*\|\h\w*::'
let g:deoplete#omni#input_patterns.c    = '[^.[:digit:]*\t]\%(\.\|->\)'
let g:deoplete#omni#input_patterns.cpp  = '[^.[:digit:]*\t]\%(\.\|->\)\|\h\w*::'
let g:deoplete#omni#input_patterns.perl = '\h\w*->\h\w*\|\h\w*::'

"if !exists('g:deoplete#force_omni_input_patterns')
"  let g:deoplete#force_omni_input_patterns = {}
"endif
"let g:deoplete#force_omni_input_patterns.cpp = '[^.[:digit:] *\t]\%(\.\|->\)\w*\|\h\w*::\w*'


" complete func
"let g:deoplete#sources#vim#complete_functions = {
"      \ 'Unite':               'unite#complete_source',
"      \ 'VimShellExecute':     'vimshell#vimshell_execute_complete',
"      \ 'VimShellInteractive': 'vimshell#vimshell_execute_complete',
"      \ 'VimShellTerminal':    'vimshell#vimshell_execute_complete',
"      \ 'VimShell':            'vimshell#complete',
"      \ 'VimFiler':            'vimfiler#complete' }

" Define keyword.
if !exists('g:deoplete#keyword_patterns')
  let g:deoplete#keyword_patterns = {}
endif
let g:deoplete#keyword_patterns._ = '\h\w*'

set completeopt+=noinsert
inoremap <expr><TAB> pumvisible() ? "\<Down>" : "\<Tab>"

"" Enable heavy omni completion.
"if !exists('g:deoplete#sources#omni#input_patterns')
"  let g:deoplete#sources#omni#input_patterns = {}
"endif
"
"" include path
"if g:is_osx
"  let g:deoplete#sources#include#paths = {
"        \ 'cpp':  '.,/usr/include,/usr/include/c++/4.2.1,/usr/local/include',
"        \ 'c':    '.,/usr/include,/usr/local/include'}
"elseif g:is_linux
"  let g:deoplete#sources#include#paths = {
"        \ 'cpp':  '.,/usr/include,/usr/include/c++/4.8,/usr/local/include',
"        \ 'c':    '.,/usr/include,/usr/local/include'}
"endif
"let g:deoplete#sources#include#paths.d = '.,./src,./source,$D_IMPORT_DIR'
"
"" include pattern
"let g:deoplete#sources#include#patterns={
"      \ 'cpp':  '^\s*#\s*include',
"      \ 'c':    '^\s*#\s*include',
"      \ 'd':    '^\s*import',
"      \ 'ruby': '^\s*require' }
"
"let g:deoplete#sources#include#exprs={
"      \'ruby': substitute(v:fname,'::','/','g') }
"
"if !exists('g:deoplete#sources#omni#input_patterns')
"  let g:deoplete#sources#omni#input_patterns={}
"endif
"let g:rsenseUseOmniFunc = 1
