" Menu
let s:menu = {}

let s:menu.vimrc = {
            \ 'description': 'Edit vimrc',
            \ 'file_candidates': [
            \   ['.vimrc.local', getcwd().'/.vimrc.local']
            \ ]
            \}
let s:menu.vimrc.file_candidates += map(split(glob($VIMDIR.'/config/**/*')), "[fnamemodify(v:val, ':~'), v:val]")

let s:menu.plugins = {
            \ 'description': 'List plugins'
            \}
let s:menu.plugins.file_candidates = map(split(glob($VIM_CACHE_DIR.'/plugins/**/*')), "[fnamemodify(v:val, ';~'), v:val]")

call denite#custom#var('menu', 'menus', s:menu)


" Customization
call denite#custom#map('_', '<Tab>', '<denite:move_to_next_line>')
call denite#custom#map('_', '<S-Tab>', '<denite:move_to_previous_line>')
call denite#custom#map('_', '<C-a>', '<denite:choose_action>')
call denite#custom#map('insert', '<C-v>', '<denite:do_action:vsplit>')
call denite#custom#map('insert', '<C-s>', '<denite:do_action:split>')
call denite#custom#map('insert', '<C-p>', '<denite:do_action:preview>')
call denite#custom#map('normal', 'v', '<denite:do_action:vsplit>')
call denite#custom#map('normal', 's', '<denite:do_action:split>')
call denite#custom#map('normal', 'p', '<denite:do_action:preview>')

if executable('ag')
    call denite#custom#var('file_rec', 'command', ['ag', '--follow', '--nocolor', '--nogroup', '-g', ''])
endif
call denite#custom#source('file_rec', 'matchers', ['matcher_fuzzy', 'matcher_ignore_globs'])

if executable('ack')
    call denite#custom#var('grep', 'command', ['ack'])
endif
call denite#custom#source('grep', 'matchers', ['matcher_fuzzy', 'matcher_ignore_globs'])

call denite#custom#filter('matcher_ignore_globs', 'ignore_globs',
            \['.git/', '.svn/', '.hg/', '__pycache__/', 'fonts/', 'CMakeCache/',
            \ '.gitmodules', '*~', '*.pyc', '*.sw[po]', '*.bak',
            \ '*.o', '*.so', '*.dylib', '*.exe', '*.out', '*.class', '*.elf',
            \ '.DS_Store', '*.min.*', '*.zip', '*.tar', '*.gz',
            \ '*.png', '*.jpg', '*.jpeg', '*.pdf', '*.aux', '*.dvi'])


" Extension
call denite#custom#alias('source', 'file_rec/git', 'file_rec')
call denite#custom#var('file_rec/git', 'command', ['git', 'ls-files', '-co', '--exclude-standard'])
call denite#custom#source('file_rec/git', 'matchers', ['matcher_fuzzy', 'matcher_ignore_globs'])
