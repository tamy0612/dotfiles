#================================================
# vim/config/dein/filetypes.toml
#================================================
# Vim  #{{{
[[plugins]]
repo      = 'Shougo/neco-vim'
on_ft     = 'vim'

[[plugins]]
repo      = 'vim-jp/syntax-vim-ex'
on_ft     = 'vim'

[[plugins]]
repo      = 'ynkdir/vim-vimlparser'
on_source = 'vim-vimlint'

[[plugins]]
repo      = 'syngan/vim-vimlint'
depends   = 'vim-vimlparser'
on_func   = 'vimlint#vimlint'

[[plugins]]
repo      = 'thinca/vim-themis'
on_func   = 'themis#'
#}}}


# C/C++  #{{{
[[plugins]]
repo      = 'vim-jp/cpp-vim'
on_ft     = ['c', 'cpp']

[[plugins]]
repo        = 'zchee/deoplete-clang'
on_ft       = ['c', 'cpp', 'cmake']
on_event    = 'InsertEnter'
depends     = ['deoplete.nvim']
hook_source = '''
  if vimrc#is_osx()
    let g:deoplete#sources#clang#libclang_path = '/usr/local/opt/llvm/lib/libclang.dylib'
    let g:deoplete#sources#clang#clang_header  = '/usr/local/opt/llvm/include'
  endif
'''

[[plugins]]
repo        = 'critiqjo/lldb.nvim'
if          = 'has("nvim")'
on_cmd      = ['LL', 'LLsession', 'LLmode']

[[plugins]]
repo        = 'vim-scripts/DoxygenToolkit.vim'
on_ft       = ['c', 'cpp']
#}}}


# Rust  #{{{
[[plugins]]
repo      = 'rust-lang/rust.vim'
on_ft     = 'rust'
hook_source = '''
  let g:rustfmt_autosave = 1
'''

[[plugins]]
repo        = 'autozimu/LanguageClient-neovim'
rev         = 'next'
on_ft       = ['rust']
build       = 'bash install.sh'
hook_add    = '''
  set hidden
  let g:LanguageClient_autoStart = 1
  let g:LanguageClient_serverCommands = {}
  let g:LanguageClient_serverCommands.rust = ['rls']
'''
hook_source = '''
  nnoremap <silent> <C-k> :<C-u>call LanguageClient_textDocument_hover()<CR>
  nnoremap <silent> gd :<C-u>call LanguageClient_textDocument_definition()<CR>
  command! -nargs=0 Rename call LanguageClient_textDocument_rename()
'''

[[plugins]]
repo      = 'sebastianmarkow/deoplete-rust'
depends   = ['deoplete.nvim']
on_ft     = 'rust'
on_event  = 'InsertEnter'

[[plugins]]
repo      = 'racer-rust/vim-racer'
on_ft     = 'rust'
hook_add  = '''
  augroup RustRacer
    autocmd!
    autocmd FileType rust nmap gd <Plug>(rust-def)
    autocmd FileType rust nmap gs <Plug>(rust-def-split)
    autocmd FileType rust nmap gx <Plug>(rust-def-vertical)
  augroup END
'''
#}}}


# Dlang  #{{{
[[plugins]]
repo        = 'JesseKPhillips/d.vim'
on_ft       = 'd'

[[plugins]]
repo        = 'landaire/deoplete-d'
on_ft       = 'd'
on_if       = 'executable("dcd-server") && executable("dcd-client")'
on_event    = 'InsertEnter'
depends     = ['deoplete.nvim']
#}}}


# Java  #{{{
[[plugins]]
repo      = 'artur-shaik/vim-javacomplete2'
on_ft     = 'java'
#}}}


# Scala  #{{{
[[plugins]]
repo        = 'derekwyatt/vim-scala'
on_ft       = ['scala']
hook_source = '''
  autocmd MyCmdGroup BufWritePre *.scala SortScalaImports
'''
#}}}


# Ruby  #{{{
[[plugins]]
repo        = 'vim-ruby/vim-ruby'
on_ft       = 'ruby'
on_map      = '<Plug>'
hook_add    = '''
  let g:ruby_path = ''
'''
hook_source = '''
  set tabstop=2
  set shiftwidth=2
  set softtabstop=2
'''
#}}}


# Python  #{{{
[[plugins]]
repo      = 'vim-scripts/Flake8-vim'
on_ft     = 'python'
if        = "vimrc#is_nvim() || has('python3') || has('python')"

[[plugins]]
repo      = 'hynek/vim-python-pep8-indent'
on_ft     = 'python'

# [[plugins]]
# repo      = 'zchee/deoplete-jedi'
# if        = "has('nvim')"
# on_ft     = 'python'
# depends   = 'deoplete.nvim'
#}}}


# R  #{{{
[[plugins]]
repo      = 'jalvesaq/Nvim-R'
if        = "has('nvim')"
on_ft     = 'r'
#}}}


# Markdown  #{{{
[[plugins]]
repo      = 'rcmdnk/vim-markdown'
on_ft     = ['markdown', 'mkd']
#}}}


# LaTeX  #{{{
[[plugins]]
repo        = 'vim-latex/vim-latex'
on_ft       = ['latex', 'tex']
hook_add    = '''
  let g:tex_flavor = 'latex'
'''
hook_source = '''
  autocmd MyCmdGroup FileType tex setlocal conceallevel=0
'''
#}}}


# Javascript  #{{{
[[plugins]]
repo      = 'pangloss/vim-javascript'
on_ft     = ['javascript']
#}}}


# HTML & CSS  #{{{
[[plugins]]
repo      = 'vim-scripts/HTML-AutoCloseTag'
on_ft     = ['html', 'xml', 'php']

[[plugins]]
repo      = 'hail2u/vim-css3-syntax'
on_ft     = 'css'

[[plugins]]
repo      = 'nikvdp/ejs-syntax'
on_ft     = 'ejs'
hook_add  = '''
  autocmd BufNewFile,BufRead *.ejs set filetype=ejs
'''

[[plugins]]
repo        = 'mattn/emmet-vim'
on_ft       = ['html', 'xml', 'php']
#}}}


# Data structure  #{{{
[[plugins]]
repo      = 'cespare/vim-toml'
on_ft     = 'toml'
hook_add  = '''
  autocmd MyCmdGroup BufNewFile,BufRead *.toml set filetype=toml
'''

[[plugins]]
repo      = 'elzr/vim-json'
on_ft     = 'json'
#}}}


# Misc.  #{{{
[[plugins]]
repo      = 'zah/nim.vim'
on_ft     = 'nim'

[[plugins]]
repo      = 'elixir-lang/vim-elixir'
on_ft     = 'elixir'

[[plugins]]
repo      = 'rhysd/vim-crystal'
on_ft     = 'crystal'

[[plugins]]
repo      = 'xolox/vim-lua-ftplugin'
depends   = 'vim-misc'
on_ft     = 'lua'

[[plugins]]
repo      = 'thinca/vim-ft-help_fold'
on_ft     = 'help'

[[plugins]]
repo      = 'rsmenon/vim-mathematica'
on_ft     = 'matlab'

[[plugins]]
repo      = 'vim-scripts/maxima.vim'

[[plugins]]
repo      = 'dart-lang/dart-vim-plugin'
on_ft     = 'dart'

[[plugins]]
repo      = 'zchee/deoplete-zsh'
on_ft     = 'zsh'
depends   = ['deoplete.nvim']
#}}}
# vim:ft=toml:ts=2:sw=2:fdm=marker:et
